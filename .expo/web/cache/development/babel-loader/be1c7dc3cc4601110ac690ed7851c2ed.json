{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useAtom } from 'jotai';\nimport useAction from \"../hooks/useAction\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar UIS02 = function UIS02(_ref) {\n  var jsonData = _ref.jsonData;\n  var text1 = jsonData.text1,\n      text2 = jsonData.text2,\n      btnText = jsonData.buttonText;\n\n  var _useState = useState(btnText),\n      _useState2 = _slicedToArray(_useState, 2),\n      buttonText = _useState2[0],\n      setButtonText = _useState2[1];\n\n  var _useAction = useAction(),\n      setAction = _useAction.setAction;\n\n  useEffect(function () {\n    console.log(jsonData.id);\n  });\n  useEffect(function () {\n    if (jsonData != null && jsonData.buttonText) {\n      setButtonText(jsonData.buttonText);\n    }\n  }, [jsonData.buttonText]);\n  var handlePress = useCallback(function () {\n    setAction(jsonData.buttonTarget);\n  }, []);\n  return _jsxs(View, {\n    Key: \"UI_S02\",\n    style: style.main,\n    children: [_jsx(Text, {\n      children: text1\n    }), _jsx(Text, {\n      children: text2\n    }), _jsx(Button, {\n      title: buttonText,\n      onPress: handlePress\n    })]\n  });\n};\n\nexport default UIS02;\nvar style = StyleSheet.create({\n  main: {\n    backgroundColor: 'green',\n    fontSize: 40,\n    fontWeight: 'bold',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 120,\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["/Users/soorokim/work/test/test_ModuleUI/ui/uiS02.js"],"names":["useState","useEffect","useCallback","useAtom","useAction","UIS02","jsonData","text1","text2","btnText","buttonText","setButtonText","setAction","console","log","id","handlePress","buttonTarget","style","main","StyleSheet","create","backgroundColor","fontSize","fontWeight","alignItems","justifyContent","height","width"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;;;;;AAIA,SAASC,OAAT,QAAwB,OAAxB;AAGA,OAAOC,SAAP;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC9B,MAAQC,KAAR,GAA8CD,QAA9C,CAAQC,KAAR;AAAA,MAAeC,KAAf,GAA8CF,QAA9C,CAAeE,KAAf;AAAA,MAAkCC,OAAlC,GAA8CH,QAA9C,CAAsBI,UAAtB;;AACA,kBAAoCV,QAAQ,CAACS,OAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAsBP,SAAS,EAA/B;AAAA,MAAQQ,SAAR,cAAQA,SAAR;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACS,EAArB;AACD,GAFQ,CAAT;AAIAd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIK,QAAJ,YAAIA,QAAQ,CAAEI,UAAd,EAA0B;AACxBC,MAAAA,aAAa,CAACL,QAAQ,CAACI,UAAV,CAAb;AACD;AACF,GAJQ,EAIN,CAACJ,QAAQ,CAACI,UAAV,CAJM,CAAT;AAMA,MAAMM,WAAW,GAAGd,WAAW,CAAC,YAAM;AACpCU,IAAAA,SAAS,CAACN,QAAQ,CAACW,YAAV,CAAT;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,SACE,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC,QAAV;AAAmB,IAAA,KAAK,EAAEC,KAAK,CAACC,IAAhC;AAAA,eACE,KAAC,IAAD;AAAA,gBAAOZ;AAAP,MADF,EAEE,KAAC,IAAD;AAAA,gBAAOC;AAAP,MAFF,EAGE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAEE,UAAf;AAA2B,MAAA,OAAO,EAAEM;AAApC,MAHF;AAAA,IADF;AAOD,CA1BD;;AA4BA,eAAeX,KAAf;AACA,IAAMa,KAAK,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC9BF,EAAAA,IAAI,EAAE;AACJG,IAAAA,eAAe,EAAE,OADb;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,UAAU,EAAE,MAHR;AAIJC,IAAAA,UAAU,EAAE,QAJR;AAKJC,IAAAA,cAAc,EAAE,QALZ;AAMJC,IAAAA,MAAM,EAAE,GANJ;AAOJC,IAAAA,KAAK,EAAE;AAPH;AADwB,CAAlB,CAAd","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\n//jotai useAtom\nimport { useAtom } from 'jotai';\n\n//uiS0Atom\nimport useAction from '../hooks/useAction';\n\nconst UIS02 = ({ jsonData }) => {\n  const { text1, text2, buttonText: btnText } = jsonData;\n  const [buttonText, setButtonText] = useState(btnText);\n  const { setAction } = useAction();\n\n  useEffect(() => {\n    console.log(jsonData.id);\n  });\n\n  useEffect(() => {\n    if (jsonData?.buttonText) {\n      setButtonText(jsonData.buttonText);\n    }\n  }, [jsonData.buttonText]);\n\n  const handlePress = useCallback(() => {\n    setAction(jsonData.buttonTarget);\n  }, []);\n\n  return (\n    <View Key=\"UI_S02\" style={style.main}>\n      <Text>{text1}</Text>\n      <Text>{text2}</Text>\n      <Button title={buttonText} onPress={handlePress} />\n    </View>\n  );\n};\n\nexport default UIS02;\nconst style = StyleSheet.create({\n  main: {\n    backgroundColor: 'green',\n    fontSize: 40,\n    fontWeight: 'bold',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 120,\n    width: '100%',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}