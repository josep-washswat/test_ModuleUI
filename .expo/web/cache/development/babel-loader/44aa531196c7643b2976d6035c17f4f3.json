{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useAtom } from 'jotai';\nimport { actionToggleAtom, imageUrlAtom } from \"../atoms/uiS03Atom\";\nimport useAfterRequest from \"../hooks/useAfterRequest\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar process = function process(stringData) {\n  console.log('S04, process');\n  Alert.alert('S04 processed received: ' + stringData);\n};\n\nvar UIS04 = function UIS04(_ref) {\n  var jsonData = _ref.jsonData,\n      objectStorage = _ref.objectStorage;\n\n  var _useAtom = useAtom(actionToggleAtom),\n      _useAtom2 = _slicedToArray(_useAtom, 2),\n      actionToggle = _useAtom2[0],\n      setActionToggle = _useAtom2[1];\n\n  var _useAfterRequest = useAfterRequest(),\n      request = _useAfterRequest.request,\n      data = _useAfterRequest.data,\n      isFetching = _useAfterRequest.isFetching;\n\n  useEffect(function () {\n    if (data) {\n      Alert.alert(data);\n    }\n  }, [isFetching]);\n\n  var onPress = function onPress() {\n    return _regeneratorRuntime.async(function onPress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            request();\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (actionToggle) {\n      process('hi');\n      setActionToggle(false);\n    }\n  }, [actionToggle]);\n  return _jsx(View, {\n    style: style.main,\n    children: _jsx(Button, {\n      onPress: onPress,\n      title: \"Hi\"\n    })\n  });\n};\n\nexport default UIS04;\nvar style = StyleSheet.create({\n  main: {\n    backgroundColor: 'violet',\n    fontSize: 40,\n    fontWeight: 'bold',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 120,\n    width: '100%'\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/soorokim/work/test/test_ModuleUI/ui/uiS04.js"],"names":["React","useState","useEffect","useAtom","actionToggleAtom","imageUrlAtom","useAfterRequest","process","stringData","console","log","Alert","alert","UIS04","jsonData","objectStorage","actionToggle","setActionToggle","request","data","isFetching","onPress","style","main","StyleSheet","create","backgroundColor","fontSize","fontWeight","alignItems","justifyContent","height","width","input","margin","borderWidth","padding"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAIA,SAASC,OAAT,QAAwB,OAAxB;AAGA,SAASC,gBAAT,EAA2BC,YAA3B;AACA,OAAOC,eAAP;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,UAAD,EAAgB;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAC,EAAAA,KAAK,CAACC,KAAN,CAAY,6BAA6BJ,UAAzC;AACD,CAHD;;AAIA,IAAMK,KAAK,GAAG,SAARA,KAAQ,OAAiC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AAC7C,iBAAwCZ,OAAO,CAACC,gBAAD,CAA/C;AAAA;AAAA,MAAOY,YAAP;AAAA,MAAqBC,eAArB;;AACA,yBAAsCX,eAAe,EAArD;AAAA,MAAQY,OAAR,oBAAQA,OAAR;AAAA,MAAiBC,IAAjB,oBAAiBA,IAAjB;AAAA,MAAuBC,UAAvB,oBAAuBA,UAAvB;;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIiB,IAAJ,EAAU;AACRR,MAAAA,KAAK,CAACC,KAAN,CAAYO,IAAZ;AACD;AACF,GAJQ,EAIN,CAACC,UAAD,CAJM,CAAT;;AAMA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AACdH,YAAAA,OAAO;;AADO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAGAhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,YAAJ,EAAkB;AAChBT,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAU,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GALQ,EAKN,CAACD,YAAD,CALM,CAAT;AAOA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,KAAK,CAACC,IAAnB;AAAA,cACE,KAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,OAAjB;AAA0B,MAAA,KAAK,EAAC;AAAhC;AADF,IADF;AAKD,CAzBD;;AA2BA,eAAeR,KAAf;AAEA,IAAMS,KAAK,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC9BF,EAAAA,IAAI,EAAE;AACJG,IAAAA,eAAe,EAAE,QADb;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,UAAU,EAAE,MAHR;AAIJC,IAAAA,UAAU,EAAE,QAJR;AAKJC,IAAAA,cAAc,EAAE,QALZ;AAMJC,IAAAA,MAAM,EAAE,GANJ;AAOJC,IAAAA,KAAK,EAAE;AAPH,GADwB;AAU9BC,EAAAA,KAAK,EAAE;AACLF,IAAAA,MAAM,EAAE,EADH;AAELG,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,OAAO,EAAE;AAJJ;AAVuB,CAAlB,CAAd","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Alert, TextInput, Button } from 'react-native';\n\n//jotai useAtom\nimport { useAtom } from 'jotai';\n\n//uiS03Atom\nimport { actionToggleAtom, imageUrlAtom } from '../atoms/uiS03Atom';\nimport useAfterRequest from '../hooks/useAfterRequest';\n\nconst process = (stringData) => {\n  console.log('S04, process');\n  Alert.alert('S04 processed received: ' + stringData);\n};\nconst UIS04 = ({ jsonData, objectStorage }) => {\n  const [actionToggle, setActionToggle] = useAtom(actionToggleAtom);\n  const { request, data, isFetching } = useAfterRequest();\n\n  useEffect(() => {\n    if (data) {\n      Alert.alert(data);\n    }\n  }, [isFetching]);\n\n  const onPress = async () => {\n    request();\n  };\n  useEffect(() => {\n    if (actionToggle) {\n      process('hi');\n      setActionToggle(false);\n    }\n  }, [actionToggle]);\n\n  return (\n    <View style={style.main}>\n      <Button onPress={onPress} title=\"Hi\" />\n    </View>\n  );\n};\n\nexport default UIS04;\n\nconst style = StyleSheet.create({\n  main: {\n    backgroundColor: 'violet',\n    fontSize: 40,\n    fontWeight: 'bold',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 120,\n    width: '100%',\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}